#!/bin/bash
####################################################################
# PREY Darwin (Mac) Functions - by Tomas Pollak (bootlog.org)
# URL : http://prey.bootlog.org
# License: GPLv3
####################################################################

####################################################################
# vars
####################################################################

getter='curl -s'

####################################################################
# functions
####################################################################

function check_url {
	status=`$getter -I $url | awk /HTTP/ | sed 's/[^200|302|400|404|500]//g'` # ni idea por que puse tantos status codes, deberia ser 200 o 400

	if [ $status == '200' ]; then
		config=`$getter $url`
	fi
}

function get_network_info {
	airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport'
	routes=`netstat -rn | grep default | cut -c20-35`
	mac=`arp -n $routes | cut -f4 -d' '`
	wifi_info=`$airport -I | grep -v "Off"`
}

function try_to_connect {
	# restart airport service
	networksetup -setnetworkserviceenabled AirPort off 2>/dev/null
	networksetup -setnetworkserviceenabled AirPort on 2>/dev/null

	# power on the airport
	networksetup -setairportpower off 2>/dev/null
	networksetup -setairportpower on 2>/dev/null

	# list available access points and parse to get first SSID with security "NONE"
	essid=`$airport -s | grep NONE | head -1 | cut -c1-33 | sed 's/^[ \t]*//'`

	if [ -n "$essid" ]; then

		# now lets connect and get the new info
		networksetup -setairportnetwork $essid 2>/dev/null
		wifi_info=`$airport -I`

	else

		echo "$STRING_NO_CONNECT_TO_WIFI"

	fi
}

function get_images {
	screencapture='/usr/sbin/screencapture -mx'

	if [ `whoami` == 'root' ]; then # we need to get the PID of the loginwindow and take the screenshot through launchctl

		loginpid=`ps -ax | grep loginwindow.app | grep -v grep | awk '{print $1}'`
		launchctl bsexec $loginpid $screencapture $screenshot

	else

		$screencapture $screnshot

	fi

	# muy bien, veamos si el tarro puede sacar una imagen con la webcam
	./isightcapture $picture
}

function change_wallpaper {
	# this code belongs to Katy Richard
	# http://thingsthatwork.net/index.php/2008/02/07/fun-with-os-x-defaults-and-launchd/

	defaults write com.apple.Desktop Background "{default = {ChangePath = '~/Pictures'; ChooseFolderPath = '~/Pictures'; CollectionString = Wallpapers; ImageFileAlias = <00000000 00e00003 00000000 c2cc314a 0000482b 00000000 00089e0c 001be568 0000c2fe 8ab30000 00000920 fffe0000 00000000 0000ffff ffff0001 00100008 9e0c0007 4cea0007 4cb40013 52b2000e 00260012 00740068 00650065 006d0070 00690072 0065005f 00310036 00380030 002e006a 00700067 000f001a 000c004d 00610063 0069006e 0074006f 00730068 00200048 00440012 00355573 6572732f 6b726963 68617264 2f506963 74757265 732f5761 6c6c7061 70657273 2f746865 656d7069 72655f31 3638302e 6a706700 00130001 2f000015 0002000f ffff0000 >; ImageFilePath = $wallpaper; Placement = Crop; TimerPopUpTag = 6; };}"

	# we need to restart the dock to make the new wallpaper visible
	killall Dock
}

# Mac alert msg code by Matias Halles (http://halles.cl)
function alert_user {
	alertvoice='Zarvox'
	# can be Agnes, Kathy, Princess, Vicki, Victoria, Bruce, Fred, Junior, Ralph, Albert, Bad News, Bahh, Bells, Boing, Bubbles, Cellos , Deranged, Good News, Hysterical, Pipe Organ, Trinoids, Whisper, Zarvox

	osascript -e "say \"$alertmsg\" using \"$alertvoice\"" &

# this must go in column 0
osascript<<END
	tell application "Finder"
		activate #Le da el foco al Finder
		set dd to display dialog "\n$alertmsg\n" buttons {"OK, tengo miedo."} default button 1 with icon caution #Despliega el diÃ¡logo.
	end tell
END
}

function kill_x {
	echo "$STRING_MACKILL"
}
